# with defined a RW share that is accessible without authentication !

# Default Postgresql version ( e.g.: /usr/ports/databases/postgresql${PG_VER}-server )
# see nextcloud_pkg_list file
# grep ^PGSQL_DEFAULT /usr/ports/Mk/bsd.default-versions.mk
PG_VER=15
# Default PHP version ( e.g.: /usr/ports/lang/php${PHP_VER} )
# see nextcloud_pkg_list file
PHP_VER="83"
# to overwrite NEXTCLOUD FQDN servername from env/args:
#  env H_NEXTCLOUD_FQDN=my.example.ru cbsd up
[ -z "${H_NEXTCLOUD_FQDN}" ] && H_NEXTCLOUD_FQDN="nextcloud.mydomain.com"

H_DBPASSWD=$( random_password_gen -l 30 )
H_SSLPASSWD=$( random_password_gen -l 30 )
H_NCADMIN="ncadmin"				# Nextcloud admin username
H_NCPASSWD=$( random_password_gen -l 30 )

#
H_SSLCOUNTRY=""
#
H_SSLSTATE=""
#
H_SSLLOCATION=""
# set your email here, used in SSL cert/certbot
# to overwrite H_SSLMAIL from env/args:
# env H_SSLMAIL="your_mail@mydomain.com H_NEXTCLOUD_FQDN="nextcloud.mydomain.com" cbsd up
[ -z "${H_SSLMAIL}" ] && H_SSLMAIL=""

quiet=0

jail_nextcloud()
{
	# to overwrite default settings:
	# export H_POSTGRES_VER=13 H_SHARED_BUFFERS=256MB ..

	# use 'cbsd up ip4_addr=XXXX' for overwrite via args
	ip4_addr="DHCP"
	host_hostname="${jname}.my.domain"

	# use 'cbsd up ver=13.2' for overwrite via args
	ver="native"

	pkglist=$( ${SED_CMD} -e "s:%%PG_VER%%:${PG_VER}:g" -e "s:%%PHP_VER%%:${PHP_VER}:g" nextcloud_pkg_list | ${TR_CMD} '\n' ' ' )

	# set interface=0 when IP not manage by CBSD
	interface="auto"

	baserw=1

	# jail options
	allow_raw_sockets=1
	allow_sysvipc=1
	allow_raw_sockets=1
	allow_nullfs=1
	allow_procfs=1
	allow_linprocfs=1
	allow_linsysfs=1
	allow_tmpfs=1
	allow_mount=1
	allow_zfs=1
	allow_mlock=1

	childrenmax=100

	pkg_bootstrap=1
}


postcreate_nextcloud()
{
	local _ip

	set +o xtrace
	set +o errexit

	# turn off unnecessary services, enable nginx/php-fpm/postgresql/redis
	sysrc \
		syslogd_flags="-ss" \
		sendmail_enable="NO" \
		sendmail_submit_enable="NO" \
		sendmail_outbound_enable="NO" \
		sendmail_msp_queue_enable="NO" \
		cron_enable="NO" \
		nginx_enable="YES" \
		zfs_enable="YES" \
		postgresql_enable="YES" \
		redis_enable="YES" \
		php_fpm_enable="YES"

	# Configure Postgres
	# save password in root .pgpassc
	jexec <<EOF
echo "127.0.0.1:5432:nextcloud:nextcloud:${DB_PASSWORD}" > /root/.pgpass
echo "::1:5432:nextcloud:nextcloud:${DB_PASSWORD}" >> /root/.pgpass
chmod 0600 /root/.pgpass
EOF
	echo
	${ECHO} "${H3_COLOR}Postgres nextcloud password saved in: ${N2_COLOR}/root/.pgpass${N0_COLOR}"
	echo

	# cbsd jexec
	jexec <<EOF
mkdir -p /var/storage /var/db/postgres /local/www/nextcloud/config /usr/local/www/nextcloud/themes
chown -R www:www /var/storage

# PostgreSQL
chown -R postgres:postgres /var/db/postgres
service postgresql initdb

echo "host    all             all             0.0.0.0/0               md5" >> /var/db/postgres/data${PG_VER}/pg_hba.conf
echo "host    all             all             ::/0                    md5" >> /var/db/postgres/data${PG_VER}/pg_hba.conf

service postgresql start
EOF

	sleep 2
	# tests:
	set -o errexit
	tests/10_postgres_port.sh
	set +o errexit

	jexec <<EOF
psql -d postgres -U postgres -c "CREATE USER nextcloud WITH PASSWORD '${H_DBPASSWD}'"
psql -d postgres -U postgres -c "CREATE DATABASE nextcloud OWNER nextcloud"
EOF

	# tests
	set -o errexit
	tests/20_postgres_cred.sh
	set +o errexit

## TODO: add autovacum/reindex & cie
## https://vermaden.wordpress.com/2020/01/04/nextcloud-17-on-freebsd-12-1/
#
	# Configure Redis
	jexec <<EOF
#
sed -i '' -e "s/^port .*/port 0/" -e "s|^# unixsocket .*|unixsocket /var/run/redis/redis.sock|" -e "s|^# unixsocketperm.*|unixsocketperm 770|" /usr/local/etc/redis.conf
pw usermod www -G redis
service redis start

	# wait a little before tests
	sleep 2
EOF

	# tests
	set -o errexit
	tests/30_redis_process.sh
	tests/40_redis_sock.sh
	set +o errexit

	# Configure PHP-FPM
	# php-fpm log
	jexec <<EOF
touch /var/log/php-fpm.log /var/log/php.log
chown www:www /var/log/php-fpm.log /var/log/php.log
sed -i '' -e "s/^;env/env/" /usr/local/etc/php-fpm.d/www.conf
service php-fpm start
EOF

	# Configure Nginx
	jexec <<EOF
chown -R www:www /var/log/nginx

# generate SSL
mkdir -p /usr/local/etc/nginx/ssl
cd /usr/local/etc/nginx/ssl
openssl genrsa -des3 -out server.key -passout pass:${H_SSLPASSWD} 2048
openssl req -new -key server.key \
		-passin pass:${H_SSLPASSWD} -out server.csr \
		-subj "/C=${H_SSLCOUNTRY}/ST=${H_SSLSTATE}/L=${H_SSLLOCATION}/CN=${H_NEXTCLOUD_FQDN}/emailAddress=${H_SSLMAIL}"
cp server.key server.key.orig
openssl rsa -in server.key.orig -out server.key -passin pass:${H_SSLPASSWD}
openssl x509 -req -days 7000 -in server.csr -signkey server.key -out server.crt
ln -sf /usr/local/etc/nginx/ssl/server.crt /usr/local/etc/nginx/ssl/ssl-bundle.crt
service nginx start
EOF

	# wait a little before tests
	sleep 2

	# tests
	set -o errexit
	tests/50_nginx_process.sh
	tests/55_nginx_port.sh
	#et +o errexit

	# Fetch and install nextcloud
	jexec <<EOF
fetch https://download.nextcloud.com/server/releases/latest.tar.bz2 -o /tmp/latest.tar.bz2
fetch https://download.nextcloud.com/server/releases/latest.tar.bz2.sha512 -o /tmp/latest.tar.bz2.sha512
cd /tmp && shasum -a 512 -c /tmp/latest.tar.bz2.sha512
tar -xf /tmp/latest.tar.bz2 -C /usr/local/www
chown -R www:www /usr/local/www/nextcloud

# configure nextcloud
su -m www -c 'php /usr/local/www/nextcloud/occ maintenance:install --database=pgsql --database-name=nextcloud --database-user=nextcloud --database-pass="${H_DBPASSWD}" --database-host=localhost --admin-user="${H_NCADMIN}" --admin-pass="${H_NCPASSWD}" --data-dir=/var/storage'
echo "${H_NCPASSWD}" > /root/initial_nc_passwort.txt
chmod 0400 /root/initial_nc_passwort.txt
su -m www -c 'php /usr/local/www/nextcloud/occ db:add-missing-indices'
su -m www -c 'php /usr/local/www/nextcloud/occ db:convert-filecache-bigint'

su -m www -c 'php /usr/local/www/nextcloud/occ config:system:set redis host --value="/var/run/redis/redis.sock"'
su -m www -c 'php /usr/local/www/nextcloud/occ config:system:set redis port --value=0 --type=integer'

sed -i '' '$ d' /usr/local/www/nextcloud/config/config.php
echo "  'memcache.locking' => '\\\OC\\\Memcache\\\Redis'," >> /usr/local/www/nextcloud/config/config.php
#echo "  'memcache.local' => '\\\OC\\\Memcache\\\APCu'," >> /usr/local/www/nextcloud/config/config.php
echo "  'memcache.distributed' => '\\\OC\\\Memcache\\\Redis'," >> /usr/local/www/nextcloud/config/config.php
echo "  'memcache.local' =>'\\\OC\\\Memcache\\\Redis' ," >> /usr/local/www/nextcloud/config/config.php
echo ");" >> /usr/local/www/nextcloud/config/config.php
#su -m www -c 'php /usr/local/www/nextcloud/occ config:system:set memcache.locking --value="\\\OC\\\Memcache\\\Redis"'
#su -m www -c 'php /usr/local/www/nextcloud/occ config:system:set memcache.local --value="\\\OC\\\Memcache\\\Redis"'
EOF

	trusted_num=1

	# todo: switch to facts, CBSD 13.0.21+
	for _ip in ${jail_ip} ${H_NEXTCLOUD_FQDN}; do
		echo "jexec jname=${jname} cmd=\"su -m www -c 'php /usr/local/www/nextcloud/occ config:system:set trusted_domains ${trusted_num} --value=${_ip}'\""
		jexec jname=${jname} cmd="su -m www -c 'php /usr/local/www/nextcloud/occ config:system:set trusted_domains ${trusted_num} --value=${_ip}'"
		trusted_num=$(( trusted_num + 1 ))
	done

	set -o errexit
	tests/70_login.sh
	set +o errexit

	# postmessage
	${ECHO} "	Nextcloud URL:	https://${H_NEXTCLOUD_FQDN}"
	for i in ${jail_ip}; do
		${ECHO} "	Nextcloud URL:	https://${i}"
	done

	${CAT_CMD} <<EOF
	Nextcloud admin login:		"${H_NCADMIN}"
	Nextcloud admin password:	"${H_NCPASSWD}"
	PostgreSQL postgres password:	"${H_DBPASSWD}"
	SSL password:			"${H_SSLPASSWD}"

	PS: default password stored in /root/initial_nc_passwort.txt file;

	Hint: to use occ, for example To rescan folders:

	 cbsd jexec jname=${jname} su -m www -c 'php occ files:scan-app-data'
	 cbsd jexec jname=${jname} su -m www -c 'php occ files:scan --all'

EOF
}
